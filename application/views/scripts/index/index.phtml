

<div id="header" style="margin: 0;">
    <a style="float: left;" id="logo" href="/">Dunia</a>
	<div style="margin: 3px; float: left;">
		<?php echo $this->form; ?>
	</div>
	<div style="float: right; margin: 7px">
		<?php echo $this->render('partials/nav.phtml'); ?>
   	</div>
	<div style="clear: both;"></div>
</div>
<div id="map_canvas" style="height:95%;"></div>

<div id="bottom-info-bar">
	<div class="left summary" id="summary-bar">
		<script type="text/x-handlebars" data-template-name="summary-bar">
    		<a href="#"><img src="/img/icons/markers/full_sml.png" />{{summary.later}}</a>
    		<a href="#"><img src="/img/icons/markers/half_sml.png" />{{summary.now}}</a>
    		<a href="#"><img src="/img/icons/markers/empty_sml.png" />{{summary.earlier}}</a>
    		<a href="#"><img src="/img/icons/markers/beer_sml.png" />{{summary.none}}</a>
		</script>
	</div>
	<div class="left">
    <!-- AddThis Button BEGIN -->
	<div class="addthis_toolbox addthis_default_style">
        <a class="addthis_button_facebook_like" fb:like:layout="button_count"></a>
        <a class="addthis_button_tweet"></a>
        <a class="addthis_button_google_plusone" g:plusone:size="medium"></a>
        <a class="addthis_counter addthis_pill_style"></a>
	</div>
	<script type="text/javascript" src="http://s7.addthis.com/js/250/addthis_widget.js#pubid=xa-4f93fc3233f490f0"></script>
	</div>
	<!-- AddThis Button END -->
    <div class="clear"></div>
    <!-- AddThis Button END -->
</div>

<script type="text/javascript">

thirsty.long = '<?php echo $this->long; ?>';
thirsty.lat = '<?php echo $this->lat; ?>';
thirsty.mapMarkers = [];
thirsty.data = null;

function diff(obj2, obj1) {
    var result = [];

	var temporary = [];
	
	$.each(obj1, function (key, value) {
		temporary.push(value.id[0]);
	});

    $.each(obj2, function (key, value) {
        if (temporary.indexOf(value.id[0]) == -1) {
        	result.push(value);
        }
    });
    
    return result;
}


function cleanMarkers() {
    if (thirsty.mapMarkers) {
        for (var i = 0; i < thirsty.mapMarkers.length; i++ ) {
            thirsty.mapMarkers[i].setMap(null);
        }
    }

	MyApp.summary.set('earlier', 0);
	MyApp.summary.set('now', 0);
	MyApp.summary.set('later', 0);
	MyApp.summary.set('none', 0);
    
}

function setMarkers(data) {

    var markers = data;

    var customIcons = {
        now: {
            icon: '/img/icons/markers/half.png'
        },
        earlier: {
            icon: '/img/icons/markers/empty.png'
        },
        later: {
            icon: '/img/icons/markers/full.png'
        },
        none: {
            icon: '/img/icons/markers/bar.png'
        }
    };

    $.each(markers, function(index, marker) {

        var name    = marker.name[0];
        var address = marker.address[0];
        var type    = marker.itsOn[0];
        var promos  = '';
 
        var point = new google.maps.LatLng(
            parseFloat(marker.lat[0]),
            parseFloat(marker.lng[0])
        );

        for (var j = 0; j < marker.promos.length; j++) {
            var promo = marker.promos[j];
            promos += '<div class="deal">';
            if (promo.price > 0) {
                promos += '$' + promo.price + ' ';
            }
            promos += promo.liquorType + ' (' + promo.timeStart + ' to ' + promo.timeEnd + ')</div>';
        }

        var icon = customIcons[type] || {};

        MyApp.summary.set(type, MyApp.summary.get(type) + 1);
                
        var mapMarker = new google.maps.Marker({
            map: thirsty.map,
            position: point,
            icon: icon.icon,
            shadow: icon.shadow,
            html: '<div class="overlay">' +
                    '<h2>' + name + '</h2>' +
                    '<div class="overlayContent">' +
                        '<h3>Today\'s deals</h3>' +
                        '<div>' + promos + '</div>' +
                    '</div>' +
                    '<div class="foot">' +
                        '<div class="address">' + address + '</div>' +
                        '<a href="/pub/overview/id/' + marker.id[0] + '" title="' + name + '">More info >></a>' +
                    '</div>' +
                '</div>'
        });

        google.maps.event.addListener(mapMarker, 'click', function() {
            thirsty.infoWindow.setContent(this.html);
            thirsty.infoWindow.open(thirsty.map, this);
        });
    });
}

$(document).ready(function() {

	MyApp = Ember.Application.create();
	MyApp.summary = Em.Object.create({
		now: 0,
		later: 0,
		earlier: 0,
		none: 0
	});

	MyApp.markers = new Array();

	var view = Ember.View.create({
		templateName: 'summary-bar',
		summary: MyApp.summary
	});

	var marker = Ember.Object.extend({});

	view.appendTo('#summary-bar');

    var amHere = new google.maps.LatLng(thirsty.lat, thirsty.long);

    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function (position) {

            var longitude = position.coords.longitude;
            var latitude  = position.coords.latitude;

            var currentPosition = new google.maps.LatLng(latitude, longitude);

            new google.maps.Marker({
                map: thirsty.map,
                position: currentPosition,
                icon: '/img/icons/markers/current.png'
            });
            thirsty.map.panTo(currentPosition);
        });
    }

    var myOptions = {
        zoom: 15,
        maxZoom: 20,
        center: amHere,
        mapTypeId: google.maps.MapTypeId.ROADMAP
    };

    thirsty.map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);

    google.maps.event.addListener(thirsty.map, 'tilesloaded', function(event) {
      $.ajax({
    	success: function(data) {
        	
          var diffData = diff(data, thirsty.mapMarkers);

		  var mapDiff = diffData.slice();
          
      	  setMarkers(mapDiff);
      	  
      	  $.each(diffData, function(key, value) {
      		  thirsty.mapMarkers.push(value);
      	  });
    	},
    	url: '/map/fetch-bound/lat/' + thirsty.lat + '/long/' + thirsty.long + '/ne/' + thirsty.map.getBounds().getNorthEast().lat() + ',' + thirsty.map.getBounds().getNorthEast().lng() + '/sw/' + thirsty.map.getBounds().getSouthWest().lat() + ',' + thirsty.map.getBounds().getSouthWest().lng(),
    	dataType: 'json'
      });
    });

    thirsty.infoWindow = new google.maps.InfoWindow();

    customIcons = {
        restaurant: {
            icon: '/img/icons/markers/steak.png'
        },
        bar: {
            icon: '/img/icons/markers/beer.png'
        }
    };
});
</script>
